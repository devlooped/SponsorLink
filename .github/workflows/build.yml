name: build
on: 
  workflow_dispatch:
  push:
    branches: [ main, dev/* ]
    paths:
      - 'samples/**'
      - 'src/**' 
  pull_request:
    types: [opened, synchronize, reopened]

env:
  DOTNET_NOLOGO: true
  Configuration: Release
  PackOnBuild: true
  VersionPrefix: 42.42.${{ github.run_number }}
  VersionLabel: ${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2

      - name: 🙏 build
        run: dotnet build -m:1

      - name: 🧪 test
        env: 
          GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
        run: dotnet test

      - name: 🚀 sleet
        env:
          SLEET_CONNECTION: ${{ secrets.SLEET_CONNECTION }}
        if: env.SLEET_CONNECTION != ''
        run: |
          dotnet tool install -g --version 4.0.18 sleet 
          sleet push bin --config none -f --verbose -p "SLEET_FEED_CONTAINER=nuget" -p "SLEET_FEED_CONNECTIONSTRING=${{ secrets.SLEET_CONNECTION }}" -p "SLEET_FEED_TYPE=azure" || echo "No packages found"

      - name: ⬆️ upload
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: pkg
          path: bin/*

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: windows-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2

      - name: 🔓 login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ⚙ func 4.x
        run: npm i -g azure-functions-core-tools@4 --unsafe-perm true  

      - name: 🚀 deploy
        working-directory: src\Web
        run: func azure functionapp publish sl-beta --dotnet-isolated

  test:
    name: test-${{ matrix.os }}
    needs: build
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: pwsh
    env:
      GCM_CREDENTIAL_STORE: cache
    strategy:
      matrix:
        os: [ 'windows-latest', 'ubuntu-latest', 'macOS-latest' ]
    steps:
      - name: ⬇️ artifacts
        uses: actions/download-artifact@v3
        with:
          name: pkg
          path: bin

      - name: ⚙ install
        working-directory: bin
        run: dotnet tool update -g dotnet-sponsor --prerelease --add-source .

      - name: 💻 setup
        run: |
          sponsor --version
          pushd ~
          git config -f .sponsorlink/.netconfig sponsorlink.id devlooped.sponsors.ci

      - name: 🧪 run
        run: |
          '${{ secrets.DEVLOOPED_TOKEN }}' | sponsor sync devlooped --tos --with-token
          $team = cat ~/.sponsorlink/github/devlooped.jwt | jq -R 'split(".") | .[1] | @base64d | fromjson | .roles[] | select(. == "team")' -r
          if ($team -ne "team") { exit -1 }
