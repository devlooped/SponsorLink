# Builds a final release version and pushes to nuget.org 
# whenever a release is published.
# Requires: secrets.NUGET_API_KEY

name: publish
on:
  release:
    types: [released]

env:
  DOTNET_NOLOGO: true
  Configuration: Release
  
jobs:
  publish:
    runs-on: windows-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0

      - name: 🙏 build
        run: dotnet build -m:1

      - name: 🧪 test
        working-directory: src/Tests
        run: dotnet test --filter SponsorLink=true
        
      - name: 📦 pack
        working-directory: src/Package
        run: dotnet pack -m:1 -p:version="$($env:GITHUB_REF.Replace('refs/tags/', '').TrimStart('v'))" -p:PackageReleaseNotes="https://github.com/devlooped/SponsorLink/blob/main/releases.md#$($env:GITHUB_REF.Replace('refs/tags/', '').Replace('.', ''))"

      - name: 🤖 defaults
        uses: devlooped/actions-bot@v1
        with:
          name: devlooped-bot
          gh_token: ${{ secrets.GH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🤘 checkout
        uses: actions/checkout@v3
        with: 
          path: SponsorLink
          repository: devlooped/SponsorLink
          ref: main
          fetch-depth: 0
          token: ${{ env.GH_TOKEN }}
                  
      - name: 📝 release notes
        run: |
          $tag = $($env:GITHUB_REF.Replace('refs/tags/', ''))
          $body = gh release view $tag --json body | convertfrom-json | select -first 1 -expandproperty body
          $body = "# $tag`r`n$body"
          gh auth status
          cd .\SponsorLink
          $($body; Get-Content .\releases.md) | Set-Content .\releases.md          
          git add releases.md
          (git commit -m "📝 Update release notes with $tag" && git push) || echo "Done"

      - name: 🚀 nuget
        run: dotnet nuget push bin\*.nupkg -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}} --skip-duplicate