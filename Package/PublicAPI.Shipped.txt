#nullable enable
Devlooped.DiagnosticExtensions
Devlooped.DiagnosticKind
Devlooped.DiagnosticKind.AppNotInstalled = 0 -> Devlooped.DiagnosticKind
Devlooped.DiagnosticKind.Thanks = 2 -> Devlooped.DiagnosticKind
Devlooped.DiagnosticKind.UserNotSponsoring = 1 -> Devlooped.DiagnosticKind
Devlooped.SponsorCheck
Devlooped.SponsorLink
Devlooped.SponsorLink.SponsorLink(Devlooped.SponsorLinkSettings! settings) -> void
Devlooped.SponsorLink.SponsorLink(string! sponsorable, string! product) -> void
Devlooped.SponsorLinkSettings
Devlooped.SponsorLinkSettings.Product.get -> string!
Devlooped.SponsorLinkSettings.Sponsorable.get -> string!
Devlooped.SponsorLinkSettings.SupportedDiagnostics.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DiagnosticDescriptor!>
Devlooped.SponsorLinkSettings.SupportedDiagnostics.set -> void
Devlooped.SponsorStatus
Devlooped.SponsorStatus.AppMissing = 0 -> Devlooped.SponsorStatus
Devlooped.SponsorStatus.NotSponsoring = 1 -> Devlooped.SponsorStatus
Devlooped.SponsorStatus.Sponsoring = 2 -> Devlooped.SponsorStatus
Devlooped.SponsorStatus.Member = 3 -> Devlooped.SponsorStatus
static Devlooped.DiagnosticExtensions.With(this Microsoft.CodeAnalysis.DiagnosticDescriptor! descriptor, string? id = null, Microsoft.CodeAnalysis.LocalizableString? title = null, Microsoft.CodeAnalysis.LocalizableString? messageFormat = null, Microsoft.CodeAnalysis.LocalizableString? description = null, string? helpLinkUri = null) -> Microsoft.CodeAnalysis.DiagnosticDescriptor!
static Devlooped.DiagnosticExtensions.IsKind(this Microsoft.CodeAnalysis.DiagnosticDescriptor! descriptor, Devlooped.DiagnosticKind kind) -> bool
static Devlooped.SponsorCheck.CheckAsync(string! workingDirectory, string! sponsorable, string! product, string? packageId = null, string? version = null, System.Net.Http.HttpClient? http = null) -> System.Threading.Tasks.Task<Devlooped.SponsorStatus?>!
override Devlooped.SponsorLink.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext! context) -> void
override Devlooped.SponsorLink.SupportedDiagnostics.get -> System.Collections.Immutable.ImmutableArray<Microsoft.CodeAnalysis.DiagnosticDescriptor!>
virtual Devlooped.SponsorLink.OnDiagnostic(string! projectPath, Devlooped.DiagnosticKind kind) -> Microsoft.CodeAnalysis.Diagnostic?
static Devlooped.SponsorLinkSettings.Create(string! sponsorable, string! product) -> Devlooped.SponsorLinkSettings!
static Devlooped.SponsorLinkSettings.Create(string! sponsorable, string! product, string? packageId = null, string? version = null, string? diagnosticsIdPrefix = null, int pauseMin = 0, int pauseMax = 4000, int? quietDays = null, bool transitive = false) -> Devlooped.SponsorLinkSettings!
static Devlooped.SponsorLinkSettings.Create(string! sponsorable, string! product, string? packageId, string? diagnosticsIdPrefix, int pauseMin, int pauseMax) -> Devlooped.SponsorLinkSettings!
static Devlooped.SponsorLinkSettings.Create(string! sponsorable, string! product, string? packageId, string? version, string? diagnosticsIdPrefix, int pauseMin, int pauseMax, int? quietDays) -> Devlooped.SponsorLinkSettings!