<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>sponsor</AssemblyName>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <PackageId>dotnet-sponsor</PackageId>
    <ToolCommandName>sponsor</ToolCommandName>
    <RollForward>Major</RollForward>
    <PackAsTool>true</PackAsTool>
    <PackContent>false</PackContent>
    <Description>SponsorLink CLI for synchronizing your GitHub Sponsors status to your dev machine</Description>
    <PackageTags>dotnet dotnet-tool tools</PackageTags>
    <BuildDate>$([System.DateTime]::Now.ToString("yyyy-MM-dd"))</BuildDate>
    <BuildRef>$(GITHUB_REF_NAME)</BuildRef>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <!-- From dotnet run init -->
    <DefaultExcludesInProjectFolder>*.key*;*.pub*;*.jwt</DefaultExcludesInProjectFolder>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="NuGet.Protocol" Version="6.12.1" />
    <PackageReference Include="NuGetizer" Version="1.2.4" PrivateAssets="all" />
    <PackageReference Include="Spectre.Console.Cli" Version="0.50.0" />
    <PackageReference Include="ThisAssembly.Git" Version="2.0.13" PrivateAssets="all" />
    <PackageReference Include="ThisAssembly.Project" Version="2.0.13" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Commands\Commands.csproj" Pack="false" />
    <ProjectReference Include="..\Core\Core.csproj" Pack="false" />
  </ItemGroup>

  <ItemGroup>
    <ProjectProperty Include="ToolCommandName" />
    <ProjectProperty Include="BuildDate" />
    <ProjectProperty Include="BuildRef" />
    <ProjectProperty Include="PackageId" />
    <ProjectProperty Include="PackageVersion" />
  </ItemGroup>

  <Target Name="RenderHelp" AfterTargets="Build" Condition="$(DesignTimeBuild) != 'true' and '$(OS)' == 'Windows_NT'">
    <PropertyGroup>
      <Cli>$(TargetDir)$(TargetName).exe</Cli>
      <HelpCommand>"$(Cli)" --help --tos --unattended</HelpCommand>
      <SyncCommand>"$(Cli)" sync --help --unattended</SyncCommand>
    </PropertyGroup>

    <WriteLinesToFile Lines="```shell" Overwrite="true" Encoding="UTF-8" File="help.md" />

    <Exec Command="$(HelpCommand) &gt;&gt; help.md" StdOutEncoding="UTF-8" EnvironmentVariables="NO_COLOR=true" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="MSBuildLastExitCode" />
    </Exec>
    <!-- Run again if it failed, but without the output redirect, for troubleshooting via build logs -->
    <Exec Condition="$(MSBuildLastExitCode) != '0'" Command="$(HelpCommand)" StdOutEncoding="UTF-8" EnvironmentVariables="NO_COLOR=true" />
    <Error Text="Failed to get help output." Condition="'$(MSBuildLastExitCode)' != '0'" />

    <WriteLinesToFile Lines="```" Overwrite="false" Encoding="UTF-8" File="help.md" />

    <WriteLinesToFile Lines="```shell" Overwrite="true" Encoding="UTF-8" File="sync.md" />
    <Exec Command="$(SyncCommand) &gt;&gt; sync.md" StdOutEncoding="UTF-8" EnvironmentVariables="NO_COLOR=true" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="MSBuildLastExitCode" />
    </Exec>
    <!-- Run again if it failed, but without the output redirect, for troubleshooting via build logs -->
    <Exec Condition="$(MSBuildLastExitCode) != '0'" Command="$(SyncCommand)" StdOutEncoding="UTF-8" EnvironmentVariables="NO_COLOR=true" />
    <Error Text="Failed to get help output." Condition="'$(MSBuildLastExitCode)' != '0'" />
    <WriteLinesToFile Lines="```" Overwrite="false" Encoding="UTF-8" File="sync.md" />
  </Target>

</Project>
