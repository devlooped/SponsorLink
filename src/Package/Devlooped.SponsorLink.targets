<!-- These targets are intended for package authors,to simplify packing and distribution. 
     They are not used by end users of the sponsorable package. -->
<Project>

  <!-- SponsorLink is typically consumed from a netstandard2.0 analyzer project, which by default won't copy-local 
       any of its runtime dependencies. But in order to properly load the analyzer when debugging as a roslyn component, 
       all dependencies need to exist alongside the analyzer project, so we need CopyLocal behavior always for SL. -->
  <Target Name="CopyLocalSponsorLink" AfterTargets="ResolvePackageAssets" DependsOnTargets="ResolvePackageAssets">
    <ItemGroup>
      <ReferenceCopyLocalPaths Include="@(RuntimeCopyLocalItems -> WithMetadataValue('NuGetPackageId', 'Devlooped.SponsorLink'))" />
    </ItemGroup>
  </Target>

  <Target Name="SponsorLinkPackDefaults" 
          BeforeTargets="InferPackageContents;GetPackageContents" 
          Inputs="@(PackageReference -> WithMetadataValue('Identity', 'Devlooped.SponsorLink'))" 
          Outputs="|%(PackageReference.Identity)|">
    <ItemGroup>
      <!-- NOTE: this will take care of packing SL dependencies automatically due to PrivateAssets=all
           TODO: do the equivalent for SDK Pack too. -->
      <PackageReference Condition="'%(PackageReference.PrivateAssets)' == ''"
                        PrivateAssets="all" />
                        
      <!-- NOTE: this takes care of packing the buildTransitive targets as a dependency -->
      <PackageFile Include="Devlooped.SponsorLink.Build" PackFolder="Dependency" FrameworkSpecific="false" Version="$(SponsorLinkVersion)" />
    </ItemGroup>
  </Target>

</Project>